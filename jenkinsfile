pipeline {
    agent any 

    tools {
        maven 'maven'
    }


    stages {
        stage('cleanup workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from GitHub') {
            steps {
                git branch: 'main', url: 'https://github.com/sunnygeddam7/awstask.git'
            }
        }

        stage('Build with Maven') {
            steps {
                sh 'mvn clean package'
            }
        }
        
        stage('Docker Build and Push') {
            environment {
                DOCKER_IMAGE = 'itssunnyy/tomcat:latest'
                DOCKER_CREDENTIALS = 'docker_creds'
                DOCKER_USER = 'itssunnyy'
                DOCKER_PASS = 'Lovers!!77db'

            }
            steps {
                sh 'docker build -t $DOCKER_IMAGE .'
                withCredentials([usernameColonPassword(credentialsId: 'docker_creds', variable: 'docker_creds')]) {
                    sh '''
                    docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" docker.io
                    docker push $DOCKER_IMAGE
                    '''
                }
            }
            
        }
        stage('terraform') {
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws_creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh 'terraform init'
                    sh 'terraform plan'
                    sh 'terraform apply -auto-approve'
                }
            }
        }
        stage('app_deploy') {
            steps {
                sshagent(['target_key']) {
                    sh """
                    ssh -o StrictHostKeyChecking=no ubuntu@3.106.231.253 << 'EOF'
                    docker --version
                    hostname -I
                    sudo docker pull itssunnyy/tomcat:latest
                    sudo docker run -d itssunnyy/tomcat:latest
                    """
                }
            }

        }
    }
}

